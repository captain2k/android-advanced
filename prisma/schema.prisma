// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  email     String @unique
  password  String
  firstName String
  lastName  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  careerUsers CareerUser[]
  userRegions UserRegion[]
}

model Career {
  id Int @id @default(autoincrement())

  careerName  String @unique
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  careerUsers   CareerUser[]
  careerRegions CareerRegion[]

  @@map("career")
}

model CareerUser {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int

  career   Career @relation(fields: [careerId], references: [id])
  careerId Int

  @@map("career_user")
}

model Region {
  id Int @id @default(autoincrement())

  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userRegions   UserRegion[]
  careerRegions CareerRegion[]

  @@map("region")
}

model UserRegion {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int

  region   Region @relation(fields: [regionId], references: [id])
  regionId Int

  @@map("user_region")
}

model CareerRegion {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  career   Career @relation(fields: [careerId], references: [id])
  careerId Int

  region   Region @relation(fields: [regionId], references: [id])
  regionId Int

  @@map("career_region")
}
